name: Dev rolling deploy

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
            node-version: '13'
      - run: npm install
        working-directory: frontend
      - run: npm run build
        working-directory: frontend
        env:
          OIDC_ISSUER: ${{ secrets.OIDC_ISSUER }}
          OIDC_CLIENT_ID: ${{ secrets.OIDC_CLIENT_ID }}
          OIDC_REDIRECT_URL: ${{ secrets.OIDC_REDIRECT_URL }}
          OIDC_LOGOUT_REDIRECT_URL: ${{ secrets.OIDC_LOGOUT_REDIRECT_URL }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          NODE_ENV: production
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and publish image with Jib
        run: ./gradlew jib

#  build:
#    needs: [ spa-build ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 1.11
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.11
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build with Gradle
#        run: ./gradlew build
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#      - name: Build and publish image with Jib
#        run: ./gradlew jib

  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update deployment
        uses: steebchen/kubectl@v2.0.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DO }}
        with:
          config: ${{ secrets.KUBE_CONFIG_DO }}
          command: "apply -f kubernetes-manifests/mytrack-front-deployment.yaml"
      - name: Rollout restart deployment
        uses: steebchen/kubectl@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DO }}
        with:
          config: ${{ secrets.KUBE_CONFIG_DO }}
          command: "rollout restart deployment/mytrack-front"
